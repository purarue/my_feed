#!/usr/bin/env zsh
# if FEED_REINDEX=1 ./index , this deletes
# the remote database and re-builds it

# shellcheck disable=SC1091
source "${HOME}/.local/scripts/generic/with-secrets" || true

set -e

declare SSH_TARGET
declare -a CURL_AUTH_OPTS=()
# setup Host in your ~/.ssh/config file
SSH_TARGET="${SSH_TARGET:-vultr}"

[[ -n "$FEED_REINDEX" ]] && printf 'Re'
echo "Indexing..."

wait-for-internet -q --timeout 30 || exit 0

cd "$(realpath "$(dirname "${BASH_SOURCE[0]}")")" || exit $?

[[ -n "$MY_FEED_SECRET" ]] && CURL_AUTH_OPTS=("-H" "token:$MY_FEED_SECRET")

# set prefix for indexer
export RUNELITE_PHOTOS_PREFIX='https://sean.fish/p/'

# sync osrs images
REMSYNC_PUBLIC=1 "${REPOS}/vps/remsync" "$(python3 -m my.utils.backup_to runelite_screenshots)" >/dev/null || exit $?

# temporary dir for new data
TMPDIR="$(mktemp -d)"
# https://github.com/seanbreckenridge/core/blob/main/shellscripts/epoch
PICKLE="${TMPDIR}/$(epoch).pickle" || exit $?

# warm tz cache incase its expired, use flock incase something else is already running doctor
flock ~/.local/tz-lock hpi doctor -S my.time.tz.via_location

# update approved IDs for computing deleted anime entry data
# https://github.com/seanbreckenridge/malexport/#recover_deleted
python3 -m malexport recover-deleted approved-update

# run an index
INDEX_ARGS=()
BLURRED_IMAGES="${HPIDATA}/feed_blurred_images.txt"
if [[ -f "$BLURRED_IMAGES" ]]; then
	# if we have a list of blurred images, pass it to the indexer
	INDEX_ARGS+=("-B" "$BLURRED_IMAGES")
fi
flock ~/.local/feed-lock my_feed index "$PICKLE" "${INDEX_ARGS[@]}" || exit $?

# https://github.com/seanbreckenridge/core
fd -d 1 --full-path '.*fixes.json' "$HPIDATA" -X json-compress

# https://github.com/seanbreckenridge/wait-for-internet
wait-for-internet -q --timeout "${WFI_TIMEOUT:-10}" || exit 0

# delete remote pickle's if we want to reset
[[ -n "$FEED_REINDEX" ]] && ssh "${SSH_TARGET}" 'rm -vf ~/code/my_feed/backend/data/*.pickle'

# copy up to the server
flock ~/.local/feed-sync-lock scp "${PICKLE}" "${SSH_TARGET}":~/code/my_feed/backend/data

# delete temp file
command rm -f "${PICKLE}"

if [[ -n "$FEED_REINDEX" ]]; then
	echo 'Deleting database...'
	ssh "${SSH_TARGET}" 'rm -vf ~/code/my_feed/backend/feeddata.sqlite && ~/vps/super --ctl restart feed-backend'
	echo '(remote is rebuilding database, should be done in a couple seconds)'
else
	# otherwise this is just new data, just ping the server to check for new files
	echo 'Running update...'
	printf '%s\n' "$(curl "${CURL_AUTH_OPTS[@]}" -sL 'https://sean.fish/feed_api/check')"
fi
